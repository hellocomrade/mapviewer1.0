<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  

  <head>
    <title>
      Attachment – OpenLayers
    </title>
        <link rel="search" href="/openlayers/search" />
        <link rel="help" href="/openlayers/wiki/TracGuide" />
        <link rel="alternate" href="/openlayers/raw-attachment/ticket/3661/EsriGeoJSON.js" type="application/javascript; charset=iso-8859-15" title="Original Format" />
        <link rel="up" href="/openlayers/ticket/3661" title="Ticket #3661" />
        <link rel="start" href="/openlayers/wiki" />
        <link rel="stylesheet" href="/openlayers/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/openlayers/chrome/common/css/code.css" type="text/css" />
        <link rel="shortcut icon" href="http://www.openlayers.org/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="http://www.openlayers.org/favicon.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/openlayers/search/opensearch" title="Search OpenLayers" />
    <script type="text/javascript" src="/openlayers/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/openlayers/chrome/common/js/trac.js"></script><script type="text/javascript" src="/openlayers/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/openlayers/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://trac.openlayers.org/"><img src="http://www.openlayers.org/images/OpenLayers.trac.png" alt="OpenLayers" height="92" width="98" /></a>
      </div>
      <form id="search" action="/openlayers/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/openlayers/login">Login</a></li><li><a href="/openlayers/wiki/TracGuide">Help/Guide</a></li><li><a href="/openlayers/about">About Trac</a></li><li class="last"><a href="/openlayers/prefs">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/openlayers/wiki">Wiki</a></li><li><a href="/openlayers/timeline">Timeline</a></li><li><a href="/openlayers/roadmap">Roadmap</a></li><li><a href="/openlayers/browser">Browse Source</a></li><li><a href="/openlayers/query">View Tickets</a></li><li class="last"><a href="/openlayers/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="last first"><a href="/openlayers/ticket/3661">Back to Ticket #3661</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="attachment">
        <h1><a href="/openlayers/ticket/3661">Ticket #3661</a>: EsriGeoJSON.js</h1>
        <table id="info" summary="Description">
          <tbody>
            <tr>
              <th scope="col">
                File EsriGeoJSON.js, <span title="12483 bytes">12.2 KB</span>
                (added by liuxd8510,  <a class="timeline" href="/openlayers/timeline?from=2012-05-21T13%3A15%3A13-0700&amp;precision=second" title="2012-05-21T13:15:13-0700 in Timeline">2 years</a> ago)
              </th>
            </tr>
            <tr>
              <td class="message searchable">
                
              </td>
            </tr>
          </tbody>
        </table>
        <div id="preview" class="searchable">
    <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td>/* Copyright (c) 2006-2010 by OpenLayers Contributors (see authors.txt for </td></tr><tr><th id="L2"><a href="#L2">2</a></th><td> * full list of contributors). Published under the Clear BSD license.  </td></tr><tr><th id="L3"><a href="#L3">3</a></th><td> * See http://svn.openlayers.org/trunk/openlayers/license.txt for the</td></tr><tr><th id="L4"><a href="#L4">4</a></th><td> * full text of the license. */</td></tr><tr><th id="L5"><a href="#L5">5</a></th><td></td></tr><tr><th id="L6"><a href="#L6">6</a></th><td>/**</td></tr><tr><th id="L7"><a href="#L7">7</a></th><td> * @requires OpenLayers/Format/GeoJSON.js</td></tr><tr><th id="L8"><a href="#L8">8</a></th><td> * @requires OpenLayers/Format/JSON.js</td></tr><tr><th id="L9"><a href="#L9">9</a></th><td> * @requires OpenLayers/Feature/Vector.js</td></tr><tr><th id="L10"><a href="#L10">10</a></th><td> * @requires OpenLayers/Geometry/Point.js</td></tr><tr><th id="L11"><a href="#L11">11</a></th><td> * @requires OpenLayers/Geometry/MultiPoint.js</td></tr><tr><th id="L12"><a href="#L12">12</a></th><td> * @requires OpenLayers/Geometry/LineString.js</td></tr><tr><th id="L13"><a href="#L13">13</a></th><td> * @requires OpenLayers/Geometry/MultiLineString.js</td></tr><tr><th id="L14"><a href="#L14">14</a></th><td> * @requires OpenLayers/Geometry/Polygon.js</td></tr><tr><th id="L15"><a href="#L15">15</a></th><td> * @requires OpenLayers/Geometry/MultiPolygon.js</td></tr><tr><th id="L16"><a href="#L16">16</a></th><td> * @requires OpenLayers/Console.js</td></tr><tr><th id="L17"><a href="#L17">17</a></th><td> */</td></tr><tr><th id="L18"><a href="#L18">18</a></th><td></td></tr><tr><th id="L19"><a href="#L19">19</a></th><td>/**</td></tr><tr><th id="L20"><a href="#L20">20</a></th><td> * Class: OpenLayers.Format.EsriGeoJSON</td></tr><tr><th id="L21"><a href="#L21">21</a></th><td> * Read and (write) EsriGeoJSON. Create a new parser with the</td></tr><tr><th id="L22"><a href="#L22">22</a></th><td> *     &lt;OpenLayers.Format.EsriGeoJSON&gt; constructor.</td></tr><tr><th id="L23"><a href="#L23">23</a></th><td> *</td></tr><tr><th id="L24"><a href="#L24">24</a></th><td> * Inherits from:</td></tr><tr><th id="L25"><a href="#L25">25</a></th><td> *  - &lt;OpenLayers.Format.GeoJSON&gt;</td></tr><tr><th id="L26"><a href="#L26">26</a></th><td> */</td></tr><tr><th id="L27"><a href="#L27">27</a></th><td>OpenLayers.Format.EsriGeoJSON = OpenLayers.Class(OpenLayers.Format.GeoJSON, {</td></tr><tr><th id="L28"><a href="#L28">28</a></th><td></td></tr><tr><th id="L29"><a href="#L29">29</a></th><td>    /**</td></tr><tr><th id="L30"><a href="#L30">30</a></th><td>     * Constructor: OpenLayers.Format.EsriGeoJSON</td></tr><tr><th id="L31"><a href="#L31">31</a></th><td>     * Create a new parser for EsriGeoJSON.</td></tr><tr><th id="L32"><a href="#L32">32</a></th><td>     *</td></tr><tr><th id="L33"><a href="#L33">33</a></th><td>     * Parameters:</td></tr><tr><th id="L34"><a href="#L34">34</a></th><td>     * options - {Object} An optional object whose properties will be set on</td></tr><tr><th id="L35"><a href="#L35">35</a></th><td>     *     this instance.</td></tr><tr><th id="L36"><a href="#L36">36</a></th><td>     */</td></tr><tr><th id="L37"><a href="#L37">37</a></th><td>    initialize: function(options) {</td></tr><tr><th id="L38"><a href="#L38">38</a></th><td>        OpenLayers.Format.GeoJSON.prototype.initialize.apply(this, [options]);</td></tr><tr><th id="L39"><a href="#L39">39</a></th><td>    },</td></tr><tr><th id="L40"><a href="#L40">40</a></th><td></td></tr><tr><th id="L41"><a href="#L41">41</a></th><td>    /**</td></tr><tr><th id="L42"><a href="#L42">42</a></th><td>     * APIMethod: read</td></tr><tr><th id="L43"><a href="#L43">43</a></th><td>     * Deserialize a EsriGeoJSON string.</td></tr><tr><th id="L44"><a href="#L44">44</a></th><td>     *</td></tr><tr><th id="L45"><a href="#L45">45</a></th><td>     * Parameters:</td></tr><tr><th id="L46"><a href="#L46">46</a></th><td>     * json - {String} A EsriGeoJSON string</td></tr><tr><th id="L47"><a href="#L47">47</a></th><td>     * Returns: </td></tr><tr><th id="L48"><a href="#L48">48</a></th><td>     * {Object} an array of &lt;OpenLayers.Feature.Vector&gt;</td></tr><tr><th id="L49"><a href="#L49">49</a></th><td>     */</td></tr><tr><th id="L50"><a href="#L50">50</a></th><td>    read: function(json) {</td></tr><tr><th id="L51"><a href="#L51">51</a></th><td>        var results = null;</td></tr><tr><th id="L52"><a href="#L52">52</a></th><td>        var obj = null;</td></tr><tr><th id="L53"><a href="#L53">53</a></th><td>        if (typeof json == "string") {</td></tr><tr><th id="L54"><a href="#L54">54</a></th><td>            obj = OpenLayers.Format.JSON.prototype.read.apply(this,</td></tr><tr><th id="L55"><a href="#L55">55</a></th><td>                                                              [json]);</td></tr><tr><th id="L56"><a href="#L56">56</a></th><td>        } else { </td></tr><tr><th id="L57"><a href="#L57">57</a></th><td>            obj = json;</td></tr><tr><th id="L58"><a href="#L58">58</a></th><td>        }    </td></tr><tr><th id="L59"><a href="#L59">59</a></th><td>        if(!obj) {</td></tr><tr><th id="L60"><a href="#L60">60</a></th><td>            OpenLayers.Console.error("Bad JSON: " + json);</td></tr><tr><th id="L61"><a href="#L61">61</a></th><td>        } else{</td></tr><tr><th id="L62"><a href="#L62">62</a></th><td>            results = this.parseEsriGeoJSON2OL(obj);</td></tr><tr><th id="L63"><a href="#L63">63</a></th><td>        }</td></tr><tr><th id="L64"><a href="#L64">64</a></th><td>        return results;</td></tr><tr><th id="L65"><a href="#L65">65</a></th><td>    },</td></tr><tr><th id="L66"><a href="#L66">66</a></th><td>    </td></tr><tr><th id="L67"><a href="#L67">67</a></th><td>    parseEsriGeoJSON2OL: function (esri_geojson) {//parse Esri GeoJSON to the OpenLayers GeoJSON</td></tr><tr><th id="L68"><a href="#L68">68</a></th><td>        var geom_type = esri_geojson.geometryType;</td></tr><tr><th id="L69"><a href="#L69">69</a></th><td>        var epsg_code = esri_geojson.spatialReference.wkid;</td></tr><tr><th id="L70"><a href="#L70">70</a></th><td></td></tr><tr><th id="L71"><a href="#L71">71</a></th><td>        var result_feats = [];</td></tr><tr><th id="L72"><a href="#L72">72</a></th><td>        if(geom_type === 'esriGeometryPolygon') {</td></tr><tr><th id="L73"><a href="#L73">73</a></th><td>            for (var i=0; i &lt; esri_geojson.features.length; i++) </td></tr><tr><th id="L74"><a href="#L74">74</a></th><td>            {</td></tr><tr><th id="L75"><a href="#L75">75</a></th><td>                var feat = esri_geojson.features[i];</td></tr><tr><th id="L76"><a href="#L76">76</a></th><td>                var feature_property = '{';</td></tr><tr><th id="L77"><a href="#L77">77</a></th><td>                for(var prop in feat.attributes) {</td></tr><tr><th id="L78"><a href="#L78">78</a></th><td>                    feature_property += '"' + prop + '":"' + feat.attributes[prop] + '",';</td></tr><tr><th id="L79"><a href="#L79">79</a></th><td>                }</td></tr><tr><th id="L80"><a href="#L80">80</a></th><td>                if(feature_property.length &gt; 1) {</td></tr><tr><th id="L81"><a href="#L81">81</a></th><td>                    feature_property = feature_property.substring(0, feature_property.length - 1);</td></tr><tr><th id="L82"><a href="#L82">82</a></th><td>                }</td></tr><tr><th id="L83"><a href="#L83">83</a></th><td>                feature_property += '}';</td></tr><tr><th id="L84"><a href="#L84">84</a></th><td>                </td></tr><tr><th id="L85"><a href="#L85">85</a></th><td>                //get the geometry</td></tr><tr><th id="L86"><a href="#L86">86</a></th><td>                var o = feat.geometry;</td></tr><tr><th id="L87"><a href="#L87">87</a></th><td>                //loop through all the rings</td></tr><tr><th id="L88"><a href="#L88">88</a></th><td>                var ring_count = o.rings.length;</td></tr><tr><th id="L89"><a href="#L89">89</a></th><td>                if(ring_count === 1) {</td></tr><tr><th id="L90"><a href="#L90">90</a></th><td>                    //create geojson start &amp; end - i know i'm getting polygons          </td></tr><tr><th id="L91"><a href="#L91">91</a></th><td>                    var geojsonstart = '{"type":"Feature", "properties":' + feature_property + ', "geometry":{"type":"Polygon", "coordinates":[['                   </td></tr><tr><th id="L92"><a href="#L92">92</a></th><td>                    var geojsonend = ']]}, "crs":{"type":"EPSG", "properties":{"code":' + epsg_code + '}}}';</td></tr><tr><th id="L93"><a href="#L93">93</a></th><td></td></tr><tr><th id="L94"><a href="#L94">94</a></th><td>                    //the coordinates for this ring</td></tr><tr><th id="L95"><a href="#L95">95</a></th><td>                    var coords = o.rings[0];</td></tr><tr><th id="L96"><a href="#L96">96</a></th><td>                    </td></tr><tr><th id="L97"><a href="#L97">97</a></th><td>                    //loop through each coordinate</td></tr><tr><th id="L98"><a href="#L98">98</a></th><td>                    var coordPair="";</td></tr><tr><th id="L99"><a href="#L99">99</a></th><td>                    for (var g=0; g &lt; coords.length; g++) </td></tr><tr><th id="L100"><a href="#L100">100</a></th><td>                    {</td></tr><tr><th id="L101"><a href="#L101">101</a></th><td>                        if(g==coords.length-1){</td></tr><tr><th id="L102"><a href="#L102">102</a></th><td>                            coordPair = coordPair+"["+coords[g]+"]";</td></tr><tr><th id="L103"><a href="#L103">103</a></th><td>                        }else{</td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>                            coordPair=coordPair+"["+coords[g]+"],";</td></tr><tr><th id="L105"><a href="#L105">105</a></th><td>                        }</td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>                    }</td></tr><tr><th id="L107"><a href="#L107">107</a></th><td></td></tr><tr><th id="L108"><a href="#L108">108</a></th><td>                    //combine to create geojson string</td></tr><tr><th id="L109"><a href="#L109">109</a></th><td>                    var new_ol_feats = this.esriDeserialize(geojsonstart+coordPair+geojsonend);</td></tr><tr><th id="L110"><a href="#L110">110</a></th><td>                    if(new_ol_feats) {</td></tr><tr><th id="L111"><a href="#L111">111</a></th><td>                        result_feats = result_feats.concat(new_ol_feats);</td></tr><tr><th id="L112"><a href="#L112">112</a></th><td>                    }</td></tr><tr><th id="L113"><a href="#L113">113</a></th><td>                } else if (ring_count &gt; 1) {</td></tr><tr><th id="L114"><a href="#L114">114</a></th><td>                    //create geojson start &amp; end - i know i'm getting polygons          </td></tr><tr><th id="L115"><a href="#L115">115</a></th><td>                    var geojsonstart = '{"type":"Feature", "properties":' + feature_property + ', "geometry":{"type":"MultiPolygon", "coordinates":[['                  </td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>                    var geojsonend = ']]}, "crs":{"type":"EPSG", "properties":{"code":' + epsg_code + '}}}';</td></tr><tr><th id="L117"><a href="#L117">117</a></th><td>                    </td></tr><tr><th id="L118"><a href="#L118">118</a></th><td>                    var total_coords = "";</td></tr><tr><th id="L119"><a href="#L119">119</a></th><td>                    for (var s=0; s &lt; ring_count; s++) </td></tr><tr><th id="L120"><a href="#L120">120</a></th><td>                    {</td></tr><tr><th id="L121"><a href="#L121">121</a></th><td>                        //the coordinates for this ring</td></tr><tr><th id="L122"><a href="#L122">122</a></th><td>                        var coords = o.rings[s];</td></tr><tr><th id="L123"><a href="#L123">123</a></th><td>                        </td></tr><tr><th id="L124"><a href="#L124">124</a></th><td>                        //loop through each coordinate</td></tr><tr><th id="L125"><a href="#L125">125</a></th><td>                        var coordPair="[";</td></tr><tr><th id="L126"><a href="#L126">126</a></th><td>                        for (var g=0; g &lt; coords.length; g++) </td></tr><tr><th id="L127"><a href="#L127">127</a></th><td>                        {</td></tr><tr><th id="L128"><a href="#L128">128</a></th><td>                            if(g==coords.length-1){</td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>                                coordPair = coordPair+"["+coords[g]+"]";</td></tr><tr><th id="L130"><a href="#L130">130</a></th><td>                            }else{</td></tr><tr><th id="L131"><a href="#L131">131</a></th><td>                                coordPair=coordPair+"["+coords[g]+"],";</td></tr><tr><th id="L132"><a href="#L132">132</a></th><td>                            }</td></tr><tr><th id="L133"><a href="#L133">133</a></th><td>                        }</td></tr><tr><th id="L134"><a href="#L134">134</a></th><td>                        </td></tr><tr><th id="L135"><a href="#L135">135</a></th><td>                        if(s === ring_count - 1) {</td></tr><tr><th id="L136"><a href="#L136">136</a></th><td>                            coordPair += "]";</td></tr><tr><th id="L137"><a href="#L137">137</a></th><td>                        } else {</td></tr><tr><th id="L138"><a href="#L138">138</a></th><td>                            coordPair += "],";</td></tr><tr><th id="L139"><a href="#L139">139</a></th><td>                        }</td></tr><tr><th id="L140"><a href="#L140">140</a></th><td>                        </td></tr><tr><th id="L141"><a href="#L141">141</a></th><td>                        total_coords += coordPair;</td></tr><tr><th id="L142"><a href="#L142">142</a></th><td>                    }</td></tr><tr><th id="L143"><a href="#L143">143</a></th><td>                    </td></tr><tr><th id="L144"><a href="#L144">144</a></th><td>                    //combine to create geojson string</td></tr><tr><th id="L145"><a href="#L145">145</a></th><td>                    var new_ol_feats = this.esriDeserialize(geojsonstart+total_coords+geojsonend);</td></tr><tr><th id="L146"><a href="#L146">146</a></th><td>                    if(new_ol_feats) {</td></tr><tr><th id="L147"><a href="#L147">147</a></th><td>                        result_feats = result_feats.concat(new_ol_feats);</td></tr><tr><th id="L148"><a href="#L148">148</a></th><td>                    }</td></tr><tr><th id="L149"><a href="#L149">149</a></th><td>                }</td></tr><tr><th id="L150"><a href="#L150">150</a></th><td>            }</td></tr><tr><th id="L151"><a href="#L151">151</a></th><td>        } else if (geom_type === 'esriGeometryPolyline') {</td></tr><tr><th id="L152"><a href="#L152">152</a></th><td>            for (var i=0; i &lt; esri_geojson.features.length; i++) </td></tr><tr><th id="L153"><a href="#L153">153</a></th><td>            {</td></tr><tr><th id="L154"><a href="#L154">154</a></th><td>                var feat = esri_geojson.features[i];</td></tr><tr><th id="L155"><a href="#L155">155</a></th><td>                var feature_property = '{';</td></tr><tr><th id="L156"><a href="#L156">156</a></th><td>                for(var prop in feat.attributes) {</td></tr><tr><th id="L157"><a href="#L157">157</a></th><td>                    feature_property += '"' + prop + '":"' + feat.attributes[prop] + '",';</td></tr><tr><th id="L158"><a href="#L158">158</a></th><td>                }</td></tr><tr><th id="L159"><a href="#L159">159</a></th><td>                if(feature_property.length &gt; 1) {</td></tr><tr><th id="L160"><a href="#L160">160</a></th><td>                    feature_property = feature_property.substring(0, feature_property.length - 1);</td></tr><tr><th id="L161"><a href="#L161">161</a></th><td>                }</td></tr><tr><th id="L162"><a href="#L162">162</a></th><td>                feature_property += '}';</td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>                </td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>                //get the geometry</td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>                var o = feat.geometry;</td></tr><tr><th id="L166"><a href="#L166">166</a></th><td>                var path_count = o.paths.length;</td></tr><tr><th id="L167"><a href="#L167">167</a></th><td>                if(path_count === 1) { //LineString</td></tr><tr><th id="L168"><a href="#L168">168</a></th><td>                    var geojsonstart = '{"type":"Feature", "properties":' + feature_property + ', "geometry":{"type":"LineString", "coordinates":['                 </td></tr><tr><th id="L169"><a href="#L169">169</a></th><td>                    var geojsonend = ']}, "crs":{"type":"EPSG", "properties":{"code":' + epsg_code + '}}}';</td></tr><tr><th id="L170"><a href="#L170">170</a></th><td>                    </td></tr><tr><th id="L171"><a href="#L171">171</a></th><td>                    var coords = o.paths[0];</td></tr><tr><th id="L172"><a href="#L172">172</a></th><td>                    var coordPair="";</td></tr><tr><th id="L173"><a href="#L173">173</a></th><td>                    for (var g=0; g &lt; coords.length; g++) </td></tr><tr><th id="L174"><a href="#L174">174</a></th><td>                    {</td></tr><tr><th id="L175"><a href="#L175">175</a></th><td>                        if(g==coords.length-1){</td></tr><tr><th id="L176"><a href="#L176">176</a></th><td>                            coordPair = coordPair+"["+coords[g]+"]";</td></tr><tr><th id="L177"><a href="#L177">177</a></th><td>                        }else{</td></tr><tr><th id="L178"><a href="#L178">178</a></th><td>                            coordPair=coordPair+"["+coords[g]+"],";</td></tr><tr><th id="L179"><a href="#L179">179</a></th><td>                        }</td></tr><tr><th id="L180"><a href="#L180">180</a></th><td>                    }</td></tr><tr><th id="L181"><a href="#L181">181</a></th><td>                    </td></tr><tr><th id="L182"><a href="#L182">182</a></th><td>                    //combine to create geojson string</td></tr><tr><th id="L183"><a href="#L183">183</a></th><td>                    var new_ol_feats = this.esriDeserialize(geojsonstart+coordPair+geojsonend);</td></tr><tr><th id="L184"><a href="#L184">184</a></th><td>                    if(new_ol_feats) {</td></tr><tr><th id="L185"><a href="#L185">185</a></th><td>                        result_feats = result_feats.concat(new_ol_feats);</td></tr><tr><th id="L186"><a href="#L186">186</a></th><td>                    }</td></tr><tr><th id="L187"><a href="#L187">187</a></th><td>                } else if (path_count &gt; 1) { //MultiLineString</td></tr><tr><th id="L188"><a href="#L188">188</a></th><td>                    var geojsonstart = '{"type":"Feature", "properties":' + feature_property + ', "geometry":{"type":"MultiLineString", "coordinates":['                    </td></tr><tr><th id="L189"><a href="#L189">189</a></th><td>                    var geojsonend = ']}, "crs":{"type":"EPSG", "properties":{"code":' + epsg_code + '}}}';</td></tr><tr><th id="L190"><a href="#L190">190</a></th><td>                    </td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>                    //loop through all the rings</td></tr><tr><th id="L192"><a href="#L192">192</a></th><td>                    var total_coords = "";</td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>                    for (var s=0; s &lt; path_count; s++) </td></tr><tr><th id="L194"><a href="#L194">194</a></th><td>                    {</td></tr><tr><th id="L195"><a href="#L195">195</a></th><td>                        //the coordinates for this ring</td></tr><tr><th id="L196"><a href="#L196">196</a></th><td>                        var coords = o.paths[s];</td></tr><tr><th id="L197"><a href="#L197">197</a></th><td>                        </td></tr><tr><th id="L198"><a href="#L198">198</a></th><td>                        //loop through each coordinate</td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>                        var coordPair="[";</td></tr><tr><th id="L200"><a href="#L200">200</a></th><td>                        for (var g=0; g &lt; coords.length; g++) </td></tr><tr><th id="L201"><a href="#L201">201</a></th><td>                        {</td></tr><tr><th id="L202"><a href="#L202">202</a></th><td>                            if(g==coords.length-1){</td></tr><tr><th id="L203"><a href="#L203">203</a></th><td>                                coordPair = coordPair+"["+coords[g]+"]";</td></tr><tr><th id="L204"><a href="#L204">204</a></th><td>                            }else{</td></tr><tr><th id="L205"><a href="#L205">205</a></th><td>                                coordPair=coordPair+"["+coords[g]+"],";</td></tr><tr><th id="L206"><a href="#L206">206</a></th><td>                            }</td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>                        }</td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>                        </td></tr><tr><th id="L209"><a href="#L209">209</a></th><td>                        if(s === path_count - 1) {</td></tr><tr><th id="L210"><a href="#L210">210</a></th><td>                            coordPair += "]";</td></tr><tr><th id="L211"><a href="#L211">211</a></th><td>                        } else {</td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>                            coordPair += "],";</td></tr><tr><th id="L213"><a href="#L213">213</a></th><td>                        }</td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>                        </td></tr><tr><th id="L215"><a href="#L215">215</a></th><td>                        total_coords += coordPair;</td></tr><tr><th id="L216"><a href="#L216">216</a></th><td>                    }</td></tr><tr><th id="L217"><a href="#L217">217</a></th><td>                    </td></tr><tr><th id="L218"><a href="#L218">218</a></th><td>                    //combine to create geojson string</td></tr><tr><th id="L219"><a href="#L219">219</a></th><td>                    var new_ol_feats = this.esriDeserialize(geojsonstart+total_coords+geojsonend);</td></tr><tr><th id="L220"><a href="#L220">220</a></th><td>                    if(new_ol_feats) {</td></tr><tr><th id="L221"><a href="#L221">221</a></th><td>                        result_feats = result_feats.concat(new_ol_feats);</td></tr><tr><th id="L222"><a href="#L222">222</a></th><td>                    }</td></tr><tr><th id="L223"><a href="#L223">223</a></th><td>                }</td></tr><tr><th id="L224"><a href="#L224">224</a></th><td>                </td></tr><tr><th id="L225"><a href="#L225">225</a></th><td>            }</td></tr><tr><th id="L226"><a href="#L226">226</a></th><td>        } else if (geom_type === 'esriGeometryMultipoint') {</td></tr><tr><th id="L227"><a href="#L227">227</a></th><td>            for (var i=0; i &lt; esri_geojson.features.length; i++) </td></tr><tr><th id="L228"><a href="#L228">228</a></th><td>            {</td></tr><tr><th id="L229"><a href="#L229">229</a></th><td>                var feat = esri_geojson.features[i];</td></tr><tr><th id="L230"><a href="#L230">230</a></th><td>                var feature_property = '{';</td></tr><tr><th id="L231"><a href="#L231">231</a></th><td>                for(var prop in feat.attributes) {</td></tr><tr><th id="L232"><a href="#L232">232</a></th><td>                    feature_property += '"' + prop + '":"' + feat.attributes[prop] + '",';</td></tr><tr><th id="L233"><a href="#L233">233</a></th><td>                }</td></tr><tr><th id="L234"><a href="#L234">234</a></th><td>                if(feature_property.length &gt; 1) {</td></tr><tr><th id="L235"><a href="#L235">235</a></th><td>                    feature_property = feature_property.substring(0, feature_property.length - 1);</td></tr><tr><th id="L236"><a href="#L236">236</a></th><td>                }</td></tr><tr><th id="L237"><a href="#L237">237</a></th><td>                feature_property += '}';</td></tr><tr><th id="L238"><a href="#L238">238</a></th><td>                </td></tr><tr><th id="L239"><a href="#L239">239</a></th><td>                //get the geometry</td></tr><tr><th id="L240"><a href="#L240">240</a></th><td>                var o = feat.geometry;</td></tr><tr><th id="L241"><a href="#L241">241</a></th><td>                var geojsonstart = '{"type":"Feature", "properties":' + feature_property + ', "geometry":{"type":"MultiPoint", "coordinates":['                 </td></tr><tr><th id="L242"><a href="#L242">242</a></th><td>                var geojsonend = ']}, "crs":{"type":"EPSG", "properties":{"code":' + epsg_code + '}}}';</td></tr><tr><th id="L243"><a href="#L243">243</a></th><td>                </td></tr><tr><th id="L244"><a href="#L244">244</a></th><td>                //loop through all the rings</td></tr><tr><th id="L245"><a href="#L245">245</a></th><td>                var total_coords = "";</td></tr><tr><th id="L246"><a href="#L246">246</a></th><td>                for (var s=0; s &lt; o.length; s++) </td></tr><tr><th id="L247"><a href="#L247">247</a></th><td>                {</td></tr><tr><th id="L248"><a href="#L248">248</a></th><td>                    //the coordinates for this ring</td></tr><tr><th id="L249"><a href="#L249">249</a></th><td>                    var coords = o[s];</td></tr><tr><th id="L250"><a href="#L250">250</a></th><td>                    </td></tr><tr><th id="L251"><a href="#L251">251</a></th><td>                    //loop through each coordinate</td></tr><tr><th id="L252"><a href="#L252">252</a></th><td>                    var coordPair="[" + coords.x + "," + coords.y;</td></tr><tr><th id="L253"><a href="#L253">253</a></th><td>                    </td></tr><tr><th id="L254"><a href="#L254">254</a></th><td>                    if(s === path_count - 1) {</td></tr><tr><th id="L255"><a href="#L255">255</a></th><td>                        coordPair += "]";</td></tr><tr><th id="L256"><a href="#L256">256</a></th><td>                    } else {</td></tr><tr><th id="L257"><a href="#L257">257</a></th><td>                        coordPair += "],";</td></tr><tr><th id="L258"><a href="#L258">258</a></th><td>                    }</td></tr><tr><th id="L259"><a href="#L259">259</a></th><td>                    </td></tr><tr><th id="L260"><a href="#L260">260</a></th><td>                    total_coords += coordPair;</td></tr><tr><th id="L261"><a href="#L261">261</a></th><td>                }</td></tr><tr><th id="L262"><a href="#L262">262</a></th><td>                </td></tr><tr><th id="L263"><a href="#L263">263</a></th><td>                //combine to create geojson string</td></tr><tr><th id="L264"><a href="#L264">264</a></th><td>                var new_ol_feats = this.esriDeserialize(geojsonstart+total_coords+geojsonend);</td></tr><tr><th id="L265"><a href="#L265">265</a></th><td>                if(new_ol_feats) {</td></tr><tr><th id="L266"><a href="#L266">266</a></th><td>                    result_feats = result_feats.concat(new_ol_feats);</td></tr><tr><th id="L267"><a href="#L267">267</a></th><td>                }</td></tr><tr><th id="L268"><a href="#L268">268</a></th><td>            }</td></tr><tr><th id="L269"><a href="#L269">269</a></th><td>        } else if (geom_type === 'esriGeometryPoint') {</td></tr><tr><th id="L270"><a href="#L270">270</a></th><td>            for (var i=0; i &lt; esri_geojson.features.length; i++) </td></tr><tr><th id="L271"><a href="#L271">271</a></th><td>            {</td></tr><tr><th id="L272"><a href="#L272">272</a></th><td>                var feat = esri_geojson.features[i];</td></tr><tr><th id="L273"><a href="#L273">273</a></th><td>                var feature_property = '{';</td></tr><tr><th id="L274"><a href="#L274">274</a></th><td>                for(var prop in feat.attributes) {</td></tr><tr><th id="L275"><a href="#L275">275</a></th><td>                    feature_property += '"' + prop + '":"' + feat.attributes[prop] + '",';</td></tr><tr><th id="L276"><a href="#L276">276</a></th><td>                }</td></tr><tr><th id="L277"><a href="#L277">277</a></th><td>                if(feature_property.length &gt; 1) {</td></tr><tr><th id="L278"><a href="#L278">278</a></th><td>                    feature_property = feature_property.substring(0, feature_property.length - 1);</td></tr><tr><th id="L279"><a href="#L279">279</a></th><td>                }</td></tr><tr><th id="L280"><a href="#L280">280</a></th><td>                feature_property += '}';</td></tr><tr><th id="L281"><a href="#L281">281</a></th><td>                </td></tr><tr><th id="L282"><a href="#L282">282</a></th><td>                //get the geometry</td></tr><tr><th id="L283"><a href="#L283">283</a></th><td>                var o = feat.geometry;</td></tr><tr><th id="L284"><a href="#L284">284</a></th><td>                var geojsonstart = '{"type":"Feature", "properties":' + feature_property + ', "geometry":{"type":"Point", "coordinates":['                  </td></tr><tr><th id="L285"><a href="#L285">285</a></th><td>                var geojsonend = ']}, "crs":{"type":"EPSG", "properties":{"code":' + epsg_code + '}}}';</td></tr><tr><th id="L286"><a href="#L286">286</a></th><td>                var coordPair = o.x + "," + o.y;</td></tr><tr><th id="L287"><a href="#L287">287</a></th><td>                //combine to create geojson string</td></tr><tr><th id="L288"><a href="#L288">288</a></th><td>                var new_ol_feats = this.esriDeserialize(geojsonstart+coordPair+geojsonend);</td></tr><tr><th id="L289"><a href="#L289">289</a></th><td>                if(new_ol_feats) {</td></tr><tr><th id="L290"><a href="#L290">290</a></th><td>                    result_feats = result_feats.concat(new_ol_feats);</td></tr><tr><th id="L291"><a href="#L291">291</a></th><td>                }</td></tr><tr><th id="L292"><a href="#L292">292</a></th><td>            }</td></tr><tr><th id="L293"><a href="#L293">293</a></th><td>        }</td></tr><tr><th id="L294"><a href="#L294">294</a></th><td>        </td></tr><tr><th id="L295"><a href="#L295">295</a></th><td>        if(result_feats.length &gt; 0) {</td></tr><tr><th id="L296"><a href="#L296">296</a></th><td>            return result_feats;</td></tr><tr><th id="L297"><a href="#L297">297</a></th><td>        } else {</td></tr><tr><th id="L298"><a href="#L298">298</a></th><td>            return null;</td></tr><tr><th id="L299"><a href="#L299">299</a></th><td>        }</td></tr><tr><th id="L300"><a href="#L300">300</a></th><td>    },</td></tr><tr><th id="L301"><a href="#L301">301</a></th><td>    </td></tr><tr><th id="L302"><a href="#L302">302</a></th><td>    esriDeserialize: function (geojson) {</td></tr><tr><th id="L303"><a href="#L303">303</a></th><td>        var features = OpenLayers.Format.GeoJSON.prototype.read.apply(this,</td></tr><tr><th id="L304"><a href="#L304">304</a></th><td>                                                              [geojson]);</td></tr><tr><th id="L305"><a href="#L305">305</a></th><td>        if(features) </td></tr><tr><th id="L306"><a href="#L306">306</a></th><td>        {</td></tr><tr><th id="L307"><a href="#L307">307</a></th><td>            if(features.constructor != Array) {</td></tr><tr><th id="L308"><a href="#L308">308</a></th><td>                features = [features];</td></tr><tr><th id="L309"><a href="#L309">309</a></th><td>            }</td></tr><tr><th id="L310"><a href="#L310">310</a></th><td>            </td></tr><tr><th id="L311"><a href="#L311">311</a></th><td>            return features;</td></tr><tr><th id="L312"><a href="#L312">312</a></th><td>        } else {</td></tr><tr><th id="L313"><a href="#L313">313</a></th><td>            return null;</td></tr><tr><th id="L314"><a href="#L314">314</a></th><td>        }</td></tr><tr><th id="L315"><a href="#L315">315</a></th><td>    },</td></tr><tr><th id="L316"><a href="#L316">316</a></th><td></td></tr><tr><th id="L317"><a href="#L317">317</a></th><td>    /**</td></tr><tr><th id="L318"><a href="#L318">318</a></th><td>     * APIMethod: write</td></tr><tr><th id="L319"><a href="#L319">319</a></th><td>     * Serialize a feature, geometry, array of features into a GeoJSON string.</td></tr><tr><th id="L320"><a href="#L320">320</a></th><td>     *</td></tr><tr><th id="L321"><a href="#L321">321</a></th><td>     * Parameters:</td></tr><tr><th id="L322"><a href="#L322">322</a></th><td>     * obj - {Object} An &lt;OpenLayers.Feature.Vector&gt;, &lt;OpenLayers.Geometry&gt;,</td></tr><tr><th id="L323"><a href="#L323">323</a></th><td>     *     or an array of features.</td></tr><tr><th id="L324"><a href="#L324">324</a></th><td>     * pretty - {Boolean} Structure the output with newlines and indentation.</td></tr><tr><th id="L325"><a href="#L325">325</a></th><td>     *     Default is false.</td></tr><tr><th id="L326"><a href="#L326">326</a></th><td>     *</td></tr><tr><th id="L327"><a href="#L327">327</a></th><td>     * Returns:</td></tr><tr><th id="L328"><a href="#L328">328</a></th><td>     * {String} The GeoJSON string representation of the input geometry,</td></tr><tr><th id="L329"><a href="#L329">329</a></th><td>     *     features, or array of features.</td></tr><tr><th id="L330"><a href="#L330">330</a></th><td>     */</td></tr><tr><th id="L331"><a href="#L331">331</a></th><td>    write: function(obj, pretty) {</td></tr><tr><th id="L332"><a href="#L332">332</a></th><td>        var geojson = {</td></tr><tr><th id="L333"><a href="#L333">333</a></th><td>            "type": null</td></tr><tr><th id="L334"><a href="#L334">334</a></th><td>        };</td></tr><tr><th id="L335"><a href="#L335">335</a></th><td>        if(obj instanceof Array) {</td></tr><tr><th id="L336"><a href="#L336">336</a></th><td>            geojson.type = "FeatureCollection";</td></tr><tr><th id="L337"><a href="#L337">337</a></th><td>            var numFeatures = obj.length;</td></tr><tr><th id="L338"><a href="#L338">338</a></th><td>            geojson.features = new Array(numFeatures);</td></tr><tr><th id="L339"><a href="#L339">339</a></th><td>            for(var i=0; i&lt;numFeatures; ++i) {</td></tr><tr><th id="L340"><a href="#L340">340</a></th><td>                var element = obj[i];</td></tr><tr><th id="L341"><a href="#L341">341</a></th><td>                if(!element instanceof OpenLayers.Feature.Vector) {</td></tr><tr><th id="L342"><a href="#L342">342</a></th><td>                    var msg = "FeatureCollection only supports collections " +</td></tr><tr><th id="L343"><a href="#L343">343</a></th><td>                              "of features: " + element;</td></tr><tr><th id="L344"><a href="#L344">344</a></th><td>                    throw msg;</td></tr><tr><th id="L345"><a href="#L345">345</a></th><td>                }</td></tr><tr><th id="L346"><a href="#L346">346</a></th><td>                geojson.features[i] = this.extract.feature.apply(</td></tr><tr><th id="L347"><a href="#L347">347</a></th><td>                    this, [element]</td></tr><tr><th id="L348"><a href="#L348">348</a></th><td>                );</td></tr><tr><th id="L349"><a href="#L349">349</a></th><td>            }</td></tr><tr><th id="L350"><a href="#L350">350</a></th><td>        } else if (obj.CLASS_NAME.indexOf("OpenLayers.Geometry") == 0) {</td></tr><tr><th id="L351"><a href="#L351">351</a></th><td>            geojson = this.extract.geometry.apply(this, [obj]);</td></tr><tr><th id="L352"><a href="#L352">352</a></th><td>        } else if (obj instanceof OpenLayers.Feature.Vector) {</td></tr><tr><th id="L353"><a href="#L353">353</a></th><td>            geojson = this.extract.feature.apply(this, [obj]);</td></tr><tr><th id="L354"><a href="#L354">354</a></th><td>            if(obj.layer &amp;&amp; obj.layer.projection) {</td></tr><tr><th id="L355"><a href="#L355">355</a></th><td>                geojson.crs = this.createCRSObject(obj);</td></tr><tr><th id="L356"><a href="#L356">356</a></th><td>            }</td></tr><tr><th id="L357"><a href="#L357">357</a></th><td>        }</td></tr><tr><th id="L358"><a href="#L358">358</a></th><td>        return OpenLayers.Format.JSON.prototype.write.apply(this,</td></tr><tr><th id="L359"><a href="#L359">359</a></th><td>                                                            [geojson, pretty]);</td></tr><tr><th id="L360"><a href="#L360">360</a></th><td>    },</td></tr><tr><th id="L361"><a href="#L361">361</a></th><td></td></tr><tr><th id="L362"><a href="#L362">362</a></th><td>    CLASS_NAME: "OpenLayers.Format.EsriGeoJSON" </td></tr><tr><th id="L363"><a href="#L363">363</a></th><td></td></tr><tr><th id="L364"><a href="#L364">364</a></th><td>});     </td></tr></tbody></table>
        </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="last first">
          <a rel="nofollow" href="/openlayers/raw-attachment/ticket/3661/EsriGeoJSON.js">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/openlayers/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/openlayers/about"><strong>Trac 0.11.7</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right">[<a href="http://openlayers.org/">OpenLayers</a>]</p>
    </div>
  </body>
</html>